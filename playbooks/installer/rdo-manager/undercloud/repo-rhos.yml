---
- include: "{{ base_dir }}/khaleesi/playbooks/group_by.yml ansible_ssh_user=root"

- name: Register nodes on RHSM
  hosts: all:&RedHat
  sudo: yes
  roles:
    - { role: linux/rhel/register }

- name: Setup openstack repos
  hosts: "{{ repo_host }}:&RedHat"
  vars:
    - ansible_ssh_user: root
    - product_override_version: 7
  gather_facts: yes
  tasks:
      - copy:
          content="[RH7-RHOS-8.0]\nname=RH7-RHOS-8.0\nbaseurl=http://{{ provisioner.service.local_http_cache }}/rel-eng/OpenStack/8.0-RHEL-7/2015-12-22.2/RH7-RHOS-8.0/x86_64/os/\ngpgcheck=0\nenabled=1"
          dest=/etc/yum.repos.d/rhos-release-8.repo

      - copy:
          content="[RH7-RHOS-8.0-director]\nname=RH7-RHOS-8.0\nbaseurl=http://{{ provisioner.service.local_http_cache }}/rel-eng/OpenStack/8.0-RHEL-7-director/2015-12-03.1/RH7-RHOS-8.0-director/x86_64/os/\ngpgcheck=0\nenabled=1\n"
          dest=/etc/yum.repos.d/rhos-release-8-director.repo
      - name: create directory for DIB yum repo configurations
        file: path={{installer.dib_dir}} state=directory mode=0755
      - command: find /etc/yum.repos.d/ -type f -exec cp -v {} {{installer.dib_dir}} \;
      - command: cp {{installer.dib_dir}}/redhat.repo {{installer.dib_dir}}/rhos-release-rhel-7.2.repo

- name: Linux common prep (Collect performance data, etc.)
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  roles:
    - { role: linux-common }

- name: Update packages on the host
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  tasks:
    - name: repolist
      command: yum -d 7 repolist

    - name: update all packages
      yum: name=* state=latest
      register: job_result
      until: job_result|success
      retries: 5
      when: yum_update | bool

    - name: Find if a new kernel was installed
      shell: find /boot/ -anewer /proc/1/stat -name 'initramfs*' | egrep ".*"
      register: new_kernel
      ignore_errors: True
      when: "'{{ repo_host }}' == 'virthost'"

    - name: reboot host
      sudo: no
      local_action:
        wait_for_ssh
          reboot_first=true
          host="{{ ansible_ssh_host }}"
          user="root"
          key="{{ ansible_ssh_private_key_file }}"
          timeout=900
          sudo=false
      when: "'{{ repo_host }}' == 'virthost' and new_kernel.rc == 0"
